
# jobs > Job >　steps > step > コマンドなどの処理の流れ

name: Deploy Next.js site to Pages

# トリガーになる GitHubのイベント
# push、pull_request、deployment、release、issues、schedule など
on: 
  push:
    branches: ["main"]

  workflow_dispatch: # 無くてもいい(手動で実行したい人だけ残す)

# GitHub Actionの権限設定
# → ESLintで指摘項目があった際にPull Requestのコメントに内容を送信してもらうため
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

# ジョブの定義 
jobs:
  build: # build というジョブIDでジョブを定義
    name: My first build # ジョブの名前を定義
    runs-on: ubuntu-latest # ジョブの実行を行うOSの指定
    steps: # ここからstepを複数記述していき処理を実行していく。stepは直列で実行(デフォルト)
      - name: Checkout
        uses: actions/checkout@v4 # 第三者もしくはGitHubが作成したActionsをyml内に記載することで実行。リポジトリをチェックアウトするために使用
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 利用したいNode.jsバージョンを指定
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Static HTML export with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    name: My first deploy
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
